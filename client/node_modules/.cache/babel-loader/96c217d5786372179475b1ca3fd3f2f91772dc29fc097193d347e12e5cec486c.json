{"ast":null,"code":"var _jsxFileName = \"/Users/cyra/Downloads/rithm_cardgame/client/src/components/PlayerList.js\";\nimport React from 'react';\nimport '../styles/PlayerList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerList({\n  players,\n  playerChoices,\n  revealChoices,\n  currentUserId\n}) {\n  const getPlayerStatus = playerId => {\n    if (!revealChoices) {\n      if (playerChoices[playerId]) {\n        return 'Ready';\n      } else {\n        return 'Choosing...';\n      }\n    } else {\n      return playerChoices[playerId] || 'No choice';\n    }\n  };\n  const getStatusColor = status => {\n    if (status === 'Ready') return 'green';\n    if (status === 'Choosing...') return 'orange';\n    if (status === 'support') return 'green';\n    if (status === 'erode') return 'red';\n    if (status === 'depends') return 'blue';\n    return 'gray';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: player.id === currentUserId ? 'current-player' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"player-name\",\n          children: [player.username, \" \", player.id === currentUserId ? '(You)' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"player-status\",\n          style: {\n            color: getStatusColor(getPlayerStatus(player.id))\n          },\n          children: getPlayerStatus(player.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlayerList","players","playerChoices","revealChoices","currentUserId","getPlayerStatus","playerId","getStatusColor","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","id","username","style","color","_c","$RefreshReg$"],"sources":["/Users/cyra/Downloads/rithm_cardgame/client/src/components/PlayerList.js"],"sourcesContent":["import React from 'react';\nimport '../styles/PlayerList.css';\n\nfunction PlayerList({ players, playerChoices, revealChoices, currentUserId }) {\n  const getPlayerStatus = (playerId) => {\n    if (!revealChoices) {\n      if (playerChoices[playerId]) {\n        return 'Ready';\n      } else {\n        return 'Choosing...';\n      }\n    } else {\n      return playerChoices[playerId] || 'No choice';\n    }\n  };\n  \n  const getStatusColor = (status) => {\n    if (status === 'Ready') return 'green';\n    if (status === 'Choosing...') return 'orange';\n    if (status === 'support') return 'green';\n    if (status === 'erode') return 'red';\n    if (status === 'depends') return 'blue';\n    return 'gray';\n  };\n  \n  return (\n    <div className=\"player-list\">\n      <h3>Players</h3>\n      <ul>\n        {players.map((player) => (\n          <li key={player.id} className={player.id === currentUserId ? 'current-player' : ''}>\n            <span className=\"player-name\">{player.username} {player.id === currentUserId ? '(You)' : ''}</span>\n            <span \n              className=\"player-status\" \n              style={{ color: getStatusColor(getPlayerStatus(player.id)) }}\n            >\n              {getPlayerStatus(player.id)}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAc,CAAC,EAAE;EAC5E,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpC,IAAI,CAACH,aAAa,EAAE;MAClB,IAAID,aAAa,CAACI,QAAQ,CAAC,EAAE;QAC3B,OAAO,OAAO;MAChB,CAAC,MAAM;QACL,OAAO,aAAa;MACtB;IACF,CAAC,MAAM;MACL,OAAOJ,aAAa,CAACI,QAAQ,CAAC,IAAI,WAAW;IAC/C;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAIA,MAAM,KAAK,OAAO,EAAE,OAAO,OAAO;IACtC,IAAIA,MAAM,KAAK,aAAa,EAAE,OAAO,QAAQ;IAC7C,IAAIA,MAAM,KAAK,SAAS,EAAE,OAAO,OAAO;IACxC,IAAIA,MAAM,KAAK,OAAO,EAAE,OAAO,KAAK;IACpC,IAAIA,MAAM,KAAK,SAAS,EAAE,OAAO,MAAM;IACvC,OAAO,MAAM;EACf,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BX,OAAA;MAAAW,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBf,OAAA;MAAAW,QAAA,EACGT,OAAO,CAACc,GAAG,CAAEC,MAAM,iBAClBjB,OAAA;QAAoBU,SAAS,EAAEO,MAAM,CAACC,EAAE,KAAKb,aAAa,GAAG,gBAAgB,GAAG,EAAG;QAAAM,QAAA,gBACjFX,OAAA;UAAMU,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAEM,MAAM,CAACE,QAAQ,EAAC,GAAC,EAACF,MAAM,CAACC,EAAE,KAAKb,aAAa,GAAG,OAAO,GAAG,EAAE;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnGf,OAAA;UACEU,SAAS,EAAC,eAAe;UACzBU,KAAK,EAAE;YAAEC,KAAK,EAAEb,cAAc,CAACF,eAAe,CAACW,MAAM,CAACC,EAAE,CAAC;UAAE,CAAE;UAAAP,QAAA,EAE5DL,eAAe,CAACW,MAAM,CAACC,EAAE;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA,GAPAE,MAAM,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACO,EAAA,GAxCQrB,UAAU;AA0CnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}